/*
 * Matrix Client-Server Client Config API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.matrix.client;

import org.hamcrest.Matchers;
import org.junit.Assert;
import org.matrix.client.ApiException;
import org.matrix.client.api.ServerAdministrationApi;
import org.matrix.client.model.VersionsResponse;
import org.matrix.client.model.WhoIsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerAdministrationApi
 */
public class ServerAdministrationApiTest extends ApiTestBase {

    private final ServerAdministrationApi anonApi = new ServerAdministrationApi(anonClient);
    private final ServerAdministrationApi authApi = new ServerAdministrationApi(authClient);

    /**
     * Gets the versions of the specification supported by the server.
     *
     * Gets the versions of the specification supported by the server.  Values will take the form &#x60;&#x60;rX.Y.Z&#x60;&#x60;.  Only the latest &#x60;&#x60;Z&#x60;&#x60; value will be reported for each supported &#x60;&#x60;X.Y&#x60;&#x60; value. i.e. if the server implements &#x60;&#x60;r0.0.0&#x60;&#x60;, &#x60;&#x60;r0.0.1&#x60;&#x60;, and &#x60;&#x60;r1.2.0&#x60;&#x60;, it will report &#x60;&#x60;r0.0.1&#x60;&#x60; and &#x60;&#x60;r1.2.0&#x60;&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void versionsTest() throws ApiException {
        VersionsResponse response = anonApi.versions();
        System.out.println("Versions: " + response.getVersions());
        Assert.assertThat(response.getVersions().size(), Matchers.greaterThan(0));
    }
    
    /**
     * Gets information about a particular user.
     *
     * Gets information about a particular user.  This API may be restricted to only be called by the user being looked up, or by a server admin. Server-local administrator privileges are not specified in this document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void whoIsTest() throws ApiException {
        String userId = login.getUserId();
        WhoIsResponse response = authApi.whoIs(userId);
        System.out.print("WhoIs: " + response);
        Assert.assertThat(response.getUserId(), Matchers.containsString("tavoda"));
        Assert.assertThat(response.getDevices().size(), Matchers.greaterThan(0));
    }
    
}
